package hr.fer.zemris.java.custom.scripting.lexer;

/**
 * Token is symbol generated by lexer which has its value and type. Type of
 * token describes how lexer interpreted part of input string such as variable,
 * number, etc. It stores value as instance of Element class which is converted
 * from input string.
 * 
 * @author Mihael JaiÄ‡
 *
 */

public class Token {
	/**
	 * Type of token.
	 */
	private final TokenType type;
	/**
	 * Value of token. Instance of Element class.
	 */
	private final Object value;

	/**
	 * Constructor which sets type and value of token.
	 * 
	 * @param type
	 *            Type of token.
	 * @param value
	 *            Value of token.
	 */

	public Token(TokenType type, Object value) {
		this.type = type;
		this.value = value;
	}

	/**
	 * Gets value of token.
	 * 
	 * @return Value of token.
	 */

	public Object getValue() {
		return value;
	}

	/**
	 * Gets type of token.
	 * 
	 * @return Type of token.
	 */

	public TokenType getType() {
		return type;
	}

	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof Token)) {
			return false;
		}
		if (this == obj) {
			return true;
		}

		Token other = (Token) obj;
		return other.getType() == this.type && other.value.equals(this.value);
	}
}
